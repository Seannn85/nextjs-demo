{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/goktugkoyun/Desktop/SecondTimeReact/29thNextJS-MeetUpProject/pages/[meetupId]/index.js\";\nimport { Fragment } from \"react\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails() {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/6/63/Tower_Bridge_from_Shad_Thames.jpg/2560px-Tower_Bridge_from_Shad_Thames.jpg\",\n    title: \"First Meetup\",\n    address: \"Some Street 5, Some City\",\n    description: \"This is a first meetup\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["/Users/goktugkoyun/Desktop/SecondTimeReact/29thNextJS-MeetUpProject/pages/[meetupId]/index.js"],"names":["Fragment","MeetupDetail","MeetupDetails"],"mappings":";;AACA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,GAAyB;AACvB,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAC,sIADR;AAEE,IAAA,KAAK,EAAC,cAFR;AAGE,IAAA,OAAO,EAAC,0BAHV;AAIE,IAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;KATQA,a;;AAsDT,eAAeA,aAAf","sourcesContent":["import { MongoClient } from \"mongodb\";\nimport { Fragment } from \"react\";\n\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails() {\n  return (\n    <MeetupDetail\n      image=\"https://upload.wikimedia.org/wikipedia/commons/thumb/6/63/Tower_Bridge_from_Shad_Thames.jpg/2560px-Tower_Bridge_from_Shad_Thames.jpg\"\n      title=\"First Meetup\"\n      address=\"Some Street 5, Some City\"\n      description=\"This is a first meetup\"\n    ></MeetupDetail>\n  );\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\n    \"mongodb+srv://Seann85:Olabilir8@cluster0.n5kck.mongodb.net/?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n\n  const meetupsCollection = db.collection(\"meetups\");\n\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray(); // Empty curly braces means i wanna find all\n  // the second argument is define which are to be extracted for example our second argument is _id\n  // so only the id will be shown not anything else\n  return {\n    fallback: false,\n\n    paths: meetups.map((meetup) => ({\n      params: { meetupId: meetup._id.toString() },\n    }))\n  };\n}\n\nexport async function getStaticProps(context) {\n  // fetch data for a single meetup\n\n  // you cant use react hooks in here\n\n  const meetupId = context.params.meetupId;\n\n  console.log(meetupId);\n\n  return {\n    props: {\n      meetupData: {\n        image:\n          \"https://upload.wikimedia.org/wikipedia/commons/thumb/6/63/Tower_Bridge_from_Shad_Thames.jpg/2560px-Tower_Bridge_from_Shad_Thames.jpg\",\n        title: \"First Meetup\",\n        id: meetupId,\n        address: \"Some Street 5, Some City\",\n        description: \"This is a first meetup\",\n      },\n    },\n  };\n}\n\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}