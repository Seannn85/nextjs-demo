{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/goktugkoyun/Desktop/SecondTimeReact/29thNextJS-MeetUpProject/pages/[meetupId]/index.js\";\nimport { MongoClient } from \"mongodb\";\nimport { Fragment } from \"react\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails() {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/6/63/Tower_Bridge_from_Shad_Thames.jpg/2560px-Tower_Bridge_from_Shad_Thames.jpg\",\n    title: \"First Meetup\",\n    address: \"Some Street 5, Some City\",\n    description: \"This is a first meetup\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://Seann85:Olabilir8@cluster0.n5kck.mongodb.net/?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray(); // Empty curly braces means i wanna find all\n  // the second argument is define which are to be extracted for example our second argument is _id\n  // so only the id will be shown not anything else\n\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  // fetch data for a single meetup\n  // you cant use react hooks in here\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect(\"mongodb+srv://Seann85:Olabilir8@cluster0.n5kck.mongodb.net/?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const selectedMeetup = meetupsCollection.findOne({\n    _id: meetupId\n  });\n  client.close();\n  return {\n    props: {\n      meetupData: {\n        image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/6/63/Tower_Bridge_from_Shad_Thames.jpg/2560px-Tower_Bridge_from_Shad_Thames.jpg\",\n        title: \"First Meetup\",\n        id: meetupId,\n        address: \"Some Street 5, Some City\",\n        description: \"This is a first meetup\"\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["/Users/goktugkoyun/Desktop/SecondTimeReact/29thNextJS-MeetUpProject/pages/[meetupId]/index.js"],"names":["MongoClient","Fragment","MeetupDetail","MeetupDetails","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","selectedMeetup","findOne","props","meetupData","image","title","id","address","description"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,GAAyB;AACvB,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAC,sIADR;AAEE,IAAA,KAAK,EAAC,cAFR;AAGE,IAAA,OAAO,EAAC,0BAHV;AAIE,IAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;AAED,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAML,WAAW,CAACM,OAAZ,CACnB,yFADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB,CARqC,CAQmC;AACxE;AACA;;AAGAR,EAAAA,MAAM,CAACS,KAAP;AACA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAGLC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAaC,MAAD,KAAa;AAC9BC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AAAZ;AADsB,KAAb,CAAZ;AAHF,GAAP;AAOD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C;AAEA;AAEA,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AAEA,QAAMf,MAAM,GAAG,MAAML,WAAW,CAACM,OAAZ,CACnB,yFADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEF,QAAMe,cAAc,GAAGhB,iBAAiB,CAACiB,OAAlB,CAA0B;AAACb,IAAAA,GAAG,EAAEQ;AAAN,GAA1B,CAAvB;AAGEf,EAAAA,MAAM,CAACS,KAAP;AACA,SAAO;AACLY,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE;AACVC,QAAAA,KAAK,EACH,sIAFQ;AAGVC,QAAAA,KAAK,EAAE,cAHG;AAIVC,QAAAA,EAAE,EAAEV,QAJM;AAKVW,QAAAA,OAAO,EAAE,0BALC;AAMVC,QAAAA,WAAW,EAAE;AANH;AADP;AADF,GAAP;AAYD;AAED,eAAe7B,aAAf","sourcesContent":["import { MongoClient } from \"mongodb\";\nimport { Fragment } from \"react\";\n\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails() {\n  return (\n    <MeetupDetail\n      image=\"https://upload.wikimedia.org/wikipedia/commons/thumb/6/63/Tower_Bridge_from_Shad_Thames.jpg/2560px-Tower_Bridge_from_Shad_Thames.jpg\"\n      title=\"First Meetup\"\n      address=\"Some Street 5, Some City\"\n      description=\"This is a first meetup\"\n    ></MeetupDetail>\n  );\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\n    \"mongodb+srv://Seann85:Olabilir8@cluster0.n5kck.mongodb.net/?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n\n  const meetupsCollection = db.collection(\"meetups\");\n\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray(); // Empty curly braces means i wanna find all\n  // the second argument is define which are to be extracted for example our second argument is _id\n  // so only the id will be shown not anything else\n\n\n  client.close();\n  return {\n    fallback: false,\n\n    paths: meetups.map((meetup) => ({\n      params: { meetupId: meetup._id.toString() },\n    }))\n  };\n}\n\nexport async function getStaticProps(context) {\n  // fetch data for a single meetup\n\n  // you cant use react hooks in here\n\n  const meetupId = context.params.meetupId;\n\n  const client = await MongoClient.connect(\n    \"mongodb+srv://Seann85:Olabilir8@cluster0.n5kck.mongodb.net/?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n\n  const meetupsCollection = db.collection(\"meetups\");\n\nconst selectedMeetup = meetupsCollection.findOne({_id: meetupId})  \n\n\n  client.close();\n  return {\n    props: {\n      meetupData: {\n        image:\n          \"https://upload.wikimedia.org/wikipedia/commons/thumb/6/63/Tower_Bridge_from_Shad_Thames.jpg/2560px-Tower_Bridge_from_Shad_Thames.jpg\",\n        title: \"First Meetup\",\n        id: meetupId,\n        address: \"Some Street 5, Some City\",\n        description: \"This is a first meetup\",\n      },\n    },\n  };\n}\n\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}